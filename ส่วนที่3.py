import uuid  # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏´‡∏±‡∏™‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠

# ========================
# ‡∏Ñ‡∏•‡∏≤‡∏™‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
# ========================
class Product:
    def __init__(self, name, description, price, quantity, online_shop):
        self.name = str(name)
        self.description = str(description)
        self.price = float(price)
        self.quantity = int(quantity)
        self.online_shop = online_shop

# ========================
# ‡∏Ñ‡∏•‡∏≤‡∏™‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
# ========================
class Customer:
    def __init__(self, name, email, address):
        self.name = name
        self.email = email
        self.address = address
        self.cart = []         # ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
        self.past_orders = []  # ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠

# ========================
# ‡∏Ñ‡∏•‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤
# ========================
class OnlineShop:
    def __init__(self, name, url):
        self.name = name
        self.url = url
        self.products = {}  # ‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö dict {‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: Product}

    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏™‡∏ï‡πá‡∏≠‡∏Å
    def add_product(self, name, description, price, quantity):
        if name in self.products:
            self.products[name].quantity += quantity
        else:
            self.products[name] = Product(name, description, price, quantity, self)

    # ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏£‡πâ‡∏≤‡∏ô
    def show_products(self):
        print(f"üì¶ ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏£‡πâ‡∏≤‡∏ô {self.name}:")
        for product in self.products.values():
            print(f"- {product.name} ({product.description}): {product.quantity} ‡∏ä‡∏¥‡πâ‡∏ô, {product.price} ‡∏ö‡∏≤‡∏ó")

    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏•‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
    def addingItemsToCart(self, customer, product_name, quantity):
        if product_name not in self.products:
            print("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏£‡πâ‡∏≤‡∏ô")
            return
        product = self.products[product_name]
        if quantity > product.quantity:
            print("‚ùå ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏≠‡πÉ‡∏ô‡∏™‡∏ï‡πá‡∏≠‡∏Å")
            return
        customer.cart.append({"product": product, "quantity": quantity})

    # ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
    def checkOut(self, customer):
        if not customer.cart:
            print("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤")
            return None

        total = 0
        order_items = []
        for item in customer.cart:
            product = item["product"]
            quantity = item["quantity"]
            total += product.price * quantity
            order_items.append({
                "product": product.name,
                "quantity": quantity,
                "price": product.price * quantity
            })
            product.quantity -= quantity  # ‡∏ï‡∏±‡∏î‡∏™‡∏ï‡πá‡∏≠‡∏Å

        order_id = str(uuid.uuid4())
        order = {
            "order_id": order_id,
            "items": order_items,
            "total": total
        }
        customer.past_orders.append(order)
        customer.cart.clear()

        print(f"‚úÖ ‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏£‡∏´‡∏±‡∏™‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠: {order_id}")
        return order_id

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
    def orderTracking(self, customer, order_id):
        for order in customer.past_orders:
            if order["order_id"] == order_id:
                print("üìú ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠:")
                for item in order["items"]:
                    print(f"- {item['product']} x {item['quantity']} = {item['price']} ‡∏ö‡∏≤‡∏ó")
                print(f"üí∞ ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {order['total']} ‡∏ö‡∏≤‡∏ó")
                return
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏")


# ========================
# ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
# ========================

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡πâ‡∏≤‡∏ô
shop = OnlineShop("Seagull", "www.seagull.com")

# ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
shop.add_product("‡πÇ‡∏ü‡∏°‡∏•‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤", "Smooth E Babyface Foam", 30, 50)
shop.add_product("‡∏ó‡∏¥‡∏ä‡∏ä‡∏π‡πà", "‡∏™‡∏Å‡πä‡∏≠‡∏ï‡∏ï‡πå ‡∏Ñ‡∏•‡∏µ‡∏ô‡πÅ‡∏Ñ‡∏£‡πå 3 ‡∏ä‡∏±‡πâ‡∏ô", 15, 100)
shop.add_product("‡πÅ‡∏ä‡∏°‡∏û‡∏π", "TRESemme'", 149, 40)

# ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
shop.show_products()

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
customer = Customer("Kong", "kong@example.com", "123 Main St")

# ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏•‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
shop.addingItemsToCart(customer, "‡πÇ‡∏ü‡∏°‡∏•‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤", 2)
shop.addingItemsToCart(customer, "‡∏ó‡∏¥‡∏ä‡∏ä‡∏π‡πà", 1)

# ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
order_id = shop.checkOut(customer)

# ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
if order_id:
    shop.orderTracking(customer, order_id)

# ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠
shop.show_products()
